## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specified files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specified folders
.vs/
# ReSharper is a brand of JetBrains, which also makes Rider
# https://www.jetbrains.com/resharper/
_ReSharper*/
*.[Rr]e[Ss]harper
resharper-host/

# Rider is a cross-platform .NET IDE by JetBrains
# https://www.jetbrains.com/rider/
.idea/

# Visual Studio 2015 cache/options directory
.vs/

# Visual Studio 2017 cache/options directory
.vs/

# Visual Studio 2019 cache/options directory
.vs/

# Visual Studio 2022 cache/options directory
.vs/

# Visual Studio Code cache/options directory
.vscode/

# Mac meta-data, if it find its way on to Windows.
.DS_Store

# Umbraco
# Ignore unimportant folders generated by Umbraco
/umbraco/Data/
/umbraco/Logs/
/umbraco/MediaCache/

# Ignore the Umbraco cache file
/umbraco/config/umbraco.config

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
[Uu]nicode [Dd]ebug/
[Uu]nicode [Rr]elease/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if you donâ€™t use Package Restore to restore your packages
#!**/packages/
# This is for the case when the packages folder is created directly under the solution directory.
# It is better to add this to the solution-level .gitignore file.
# However, this file can be used as the solution-level .gitignore file as well.
packages/
# NuGet v3's project.json file needs to be saved in source control
!project.json

# Dotnet Core Build outputs
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCop.Cache
StyleCop.v11.Analyzers/

# Fakes
FakesAssemblies/

# GhostDoc
*.GhostDoc.xml

# Node.js
node_modules/
npm-debug.log
yarn-error.log

# Bower
bower_components/

# Gulp
Gulpfile.js

# Yeoman
.yo-rc.json

# TypeScript
*.tsbuildinfo

# F#
.fake/

# Paket
.paket/paket.bootstrapper.exe
paket-files/

# Visual Studio F# Tools
.fsproj.user

# MyGet
.myget/

# TeamCity
_TeamCity*

# DotCover
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# VSTS/TFS
.tfignore

# CodeRush
.cr/

# AppVeyor
.appveyor.yml

# Telerik
Telerik.JustMock.Configuration.dll

# TestComplete
*.pjs
*.tcproj

# OpenCover
OpenCover/

# RemSharper
*.resharper.user

# User-specific ignores
images/
